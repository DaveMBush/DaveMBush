{
    "version": "https://jsonfeed.org/version/1",
    "title": "Dave's Notebook • All posts by \"paired programming\" tag",
    "description": null,
    "home_page_url": "http://davembush.github.com",
    "items": [
        {
            "id": "http://davembush.github.com/the-parable-of-the-road-line-painter/",
            "url": "http://davembush.github.com/the-parable-of-the-road-line-painter/",
            "title": "The Parable of The Road Line Painter",
            "date_published": "2015-05-28T10:00:00.000Z",
            "content_html": "<p><img src=\"/uploads/2015/05/land-0125.jpg\" alt=\"land-0125\" title=\"land-0125\"></p>\n<p>Way back in the day when lines were first being painted on roads.  The early lines were painted by hand.  In those days, a painter was hired and given a stretch of road to paint.  The first day he got on very well.  In fact, he was one of the best line painters they had ever had.  His lines were perfectly aligned, there were no unpainted areas in the space where there should be paint, and he managed to get 500 yards of road painted.  The average line painter normally did 250 yards in the first day.  The managers who had hired him were quite pleased.</p>\n<span id=\"more\"></span>\n\n<p>Well, the next day, he came to work and set off on his task of painting the road.  He still had another 500 yards of road to paint.  And yet, for as fast as he was, he was only able to get 350 yards painted that day.  Not quite what his managers expected given his performance on the first day.  But still, better than their average painter, and so they reasoned to themselves, “Maybe he hit an extra hilly patch of road or some other unforeseen obstacle got in his way.”</p>\n<p>Finally, the third day, he came in and finished the patch of road he had been given.</p>\n<p>Since he had done so well on the first 1000 yards of road, management decided to put him on a job of a 1 mile stretch of road.  They also decided to make him the lead painter with a crew of 10 other painters who they had just hired.  He taught these new hires how to paint the road as he had been painting the road to date and they set off.  The first day was a great day.  They managed to get an average of 300 yards per person completed the first day.  Not quite what management had expected, but still better than the average line painter could do.</p>\n<p>The next day they all came to work and continued their painting.  Yet, this time, all they were able to accomplish was 200 yards per person.</p>\n<p>Predictably the next day they all came to work and continued their painting but only got 100 yards per person done.</p>\n<p>Of course management got concerned and since this was a rather easy job, they couldn’t understand how the painting could keep getting slower every day.  But obviously, since they had deadlines to meet, it was time to hire some more painters.  So they added another 10 painters to the job.  This had the impact of turning the lead painter into a manager, without the pay of a manager, and in the end, it actually slowed the painting down even more because all of the painters were getting in each other’s way.</p>\n<h2 id=\"A-Good-Idea\"><a href=\"#A-Good-Idea\" class=\"headerlink\" title=\"A Good Idea\"></a>A Good Idea</h2><p>One day, as they were painting, one of the painters mentioned that he had been reading that if they paired up and had one of the painters move the paint while the other painted the line and then they switched off painting or moving the paint, that the end result would be that they would actually end up completing the painting faster.  But his peer replied with several objections, the first being that they didn’t have permission to move the paint can.  If management had wanted them to move the paint can then that would have been part of the training they had received on the first day.  Others pointed out that obviously if they only had half of the people painting, it would take even longer to get the painting done.  Others were a lot more honest and just said, “I’m really not sure how we could move the paint.  The paint bucket is so heavy.</p>\n<h2 id=\"Tell-The-Boss\"><a href=\"#Tell-The-Boss\" class=\"headerlink\" title=\"Tell The Boss?\"></a>Tell The Boss?</h2><p>Well, you know the type.  Guys with good ideas are hard to stop.  So at the end of the day as they were cleaning up, he mentioned to the lead painter that he had an idea that might make the job move a little faster.  What if we rigged the paint so that it could be moved along as we painted?  Then we wouldn’t have to keep walking back to the paint can.  In fact, we could pair up and have one guy move the paint while the other spent his time continuously painting.  And by switching back and forth between painting and moving paint, no one would get excessively tired doing one or the other.</p>\n<p>Well, the lead painter was of course feeling threatened at this point and so he told this young up-start painter that he was hired to paint.  Not to innovate with stupid ideas that would obviously make the job take even longer.</p>\n<h2 id=\"Quit\"><a href=\"#Quit\" class=\"headerlink\" title=\"Quit\"></a>Quit</h2><p>Well, now.  Not being content to keep doing things the hard way, the innovative young painter quit this crew and went to work for a new road crew who advertised themselves as “innovative, fun and open to suggestions.”  Well, I’m sure you can predict exactly what happened next.</p>\n<p>The day he started on the job he found that they were painting the road exactly the same place as the last crew he worked on.  Of course, he mentioned his innovative idea, and of course, he got the same responses.</p>\n<p>Frustrated, he kept moving from company to company only to find out that they nearly all had the same attitude.  And so, he decided that since at each company he was pretty well left on his own to paint the lines, it wouldn’t hurt if he rigged up a wheel barrow with some paint cans so that he could fill the paint cans from the main paint receptacle and then carry the paint to the location he was painting.  This would reduce the amount of trips back to the main paint container and it really wouldn’t disrupt the work of anyone else.</p>\n<h2 id=\"It-Is-The-Same-Everywhere\"><a href=\"#It-Is-The-Same-Everywhere\" class=\"headerlink\" title=\"It Is The Same Everywhere\"></a>It Is The Same Everywhere</h2><p>There was just one problem with this.  As he started out on the new job, he found that all the nay-sayers were right.  It really did slow things down.  While before he was able to get 500 yards of road done on the first day, this time he was only able to get 300 yards of road done.  He was feeling a bit discouraged, and yet convinced that if he persisted the next day would prove him right, he continued.  Sure enough, while the average painter was able to get 200 yards done on the second day, he was able to continue with 300 yards on the second day as well.  In fact, as everyone else seemed to get slower, the innovative painter was able to get 300 yards of road done every day he painted.</p>\n<h2 id=\"The-Promotion\"><a href=\"#The-Promotion\" class=\"headerlink\" title=\"The Promotion\"></a>The Promotion</h2><p>Well, now he has management’s attention.  Let’s promote him.</p>\n<p>Well sir, he got promoted sure enough.  You know what the first thing he tried to implement?  Yep, how about if we change our whole process to move the paint can.  Well, I’m sure you know how well that went off. </p>\n<p>“We’ve been painting roads like this for 10 years and it works just fine.”</p>\n<h2 id=\"More-Frustration\"><a href=\"#More-Frustration\" class=\"headerlink\" title=\"More Frustration\"></a>More Frustration</h2><p>Even with his own team, he couldn’t get the “move the paint” method of painting roads fully implemented, no matter how hard he tried.  Yeah, there were a few pockets of painters who gave it a try, but ultimately, since it felt slower than what they had always done, they fell back to the old method they knew so well.</p>\n<p>And then, one day, a new painter came on the team who believed in the move the paint method.  He used it and found another guy on the team who was willing to pair with him so that one would move the paint and the other would paint.  Wow!  The progress they made!</p>\n<p>As they were working, one of them said, “I wonder if we can rig the wheelbarrow to drip the paint out so that we only have to spread it instead of having to dip the brush into the paint…</p>\n",
            "tags": [
                "tdd",
                "extreme programming",
                "paired programming"
            ]
        },
        {
            "id": "http://davembush.github.com/tdd-gamification-turning-test-driven-development-into-a-game/",
            "url": "http://davembush.github.com/tdd-gamification-turning-test-driven-development-into-a-game/",
            "title": "TDD Gamification - Turning Test Driven Development into a Game",
            "date_published": "2015-04-23T10:00:00.000Z",
            "content_html": "<p><img src=\"/uploads/2015/04/ge-gam-018.jpg\" alt=\"ge-gam-018\" title=\"Test Driven Development Gamification\"></p>\n<p>When I was in college, there were some guys I hung out with who played this game called “Questions” which they got from some book.  <a href=\"//en.wikipedia.org/wiki/Questions_(game)\">Actually, it was a play</a>. Anyhow, the basic rules are:</p>\n<ul>\n<li>You can’t answer a question with a statement</li>\n<li>You can’t hesitate or make a false start</li>\n<li>You can’t repeat a question that has already been used</li>\n<li>You can’t ask a rhetorical question</li>\n<li>You can’t ask an unrelated question.</li>\n</ul>\n<p>There was also <a href=\"//dotnetrocks.com/default.aspx?showNum=1111\">this podcast at DotNetRocks</a> where they were talking about a beer app and how they had added game elements to the app by adding badges for various types of beer to get you out of your comfort zone.  Maybe there is one for “My first beer that I liked” because I’ve yet to find something I like.  But give me a good Merlot! All of this got me to thinking about how we might turn Test Driven Development into something of a game. There are several people who have already addressed the Gamification of TDD</p>\n<span id=\"more\"></span>\n\n<h2 id=\"TDD-and-the-Gamification-of-Testing\"><a href=\"#TDD-and-the-Gamification-of-Testing\" class=\"headerlink\" title=\"TDD and the Gamification of Testing\"></a><a href=\"//effectivesoftwaredesign.com/2011/11/21/tdd-and-the-gamification-of-testing/\">TDD and the Gamification of Testing</a></h2><p>This article talks mostly about how TDD has many elements of good gaming inherent in it.</p>\n<ul>\n<li>Because it makes testing more like programming.  Well, what he actually says is that it raises testing to the level of complexity the programmer is familiar with.  But in reality, I think this is because it makes testing something that can be coded.</li>\n<li>Because TDD is measurable.  The test either succeeds or fails.</li>\n<li>Because TDD gives you immediate feedback.  Or at least a well written test gives you immediate feedback.</li>\n</ul>\n<h2 id=\"TDD-The-Gamification-of-Programming\"><a href=\"#TDD-The-Gamification-of-Programming\" class=\"headerlink\" title=\"TDD: The Gamification of Programming\"></a><a href=\"//benvanik.tumblr.com/post/20702406947/tdd-the-gamification-of-programming\">TDD: The Gamification of Programming</a></h2><p>This article provides an interesting perspective of someone trying to program using TDD for the first time.  You get the normal complaints, like “this takes too long” along with acknowledgement of some of the benefits.  But what he realizes is that the process has made programming more like a game than about the creative problem solving most of us got in to programming for in the first place.</p>\n<h2 id=\"Gamify-TDD\"><a href=\"#Gamify-TDD\" class=\"headerlink\" title=\"Gamify TDD\"></a><a href=\"//www.tdddev.com/2014/09/gamify-tdd.html\">Gamify TDD</a></h2><p>This is the first article I found that, instead of saying that TDD is already a game, like the two above, actually ask how we might formally turn TDD into a game because it already has many elements of a game.  But he never actually says HOW he would do that.</p>\n<h2 id=\"TDD-Gamification\"><a href=\"#TDD-Gamification\" class=\"headerlink\" title=\"TDD Gamification\"></a>TDD Gamification</h2><p>Putting this all together.  Here is how I would actually make TDD into a game.</p>\n<h4 id=\"The-rules\"><a href=\"#The-rules\" class=\"headerlink\" title=\"The rules:\"></a>The rules:</h4><ul>\n<li>The game is played in pairs.  (Paired programming)</li>\n<li>Game starts when programmer 1 writes the first test.</li>\n<li>Once a failing test is written, programmer 2 writes JUST ENOUGH to make the test succeed.</li>\n<li>Once a test succeeds, programmer 2 writes another test, and programmer 1 writes just enough to make it succeed.</li>\n<li>Play alternates until no one can think of another test that will force more code to be written.</li>\n<li>Programmer loses points if he is caught writing more code than is necessary to pass the test.</li>\n<li>Programmer loses points if he is caught writing code that has dependencies embedded in it.</li>\n<li>If a dependency is required, the test writer and the code implementer will collaborate in the method of dependency injection to be used.</li>\n<li>All points lost by one programmer go to the programmer who caught the mistake.</li>\n</ul>\n<h4 id=\"Embellishment\"><a href=\"#Embellishment\" class=\"headerlink\" title=\"Embellishment:\"></a>Embellishment:</h4><p>If code is found to have a bug in production, both programmers responsible for the code loose a point, regardless of how many lines of code are impacted.  One point per recorded bug.</p>\n<p>I’m assuming that most shops have more than 2 programmers.  On any given day, programmers would be paired up for the day of programming.  They are responsible for turning out bug free code.  Because we are tracking the code over the long term, we will be able to see just how effective each programmer is at eliminating bugs.</p>\n<p>In fact, if you are in an environment that can’t quite stomach having your programmers paired up, I would suggest keeping track of the code that wasn’t done under the game.  This would be the “house score” compared to an individual programmer’s score.</p>\n<p>The only thing we have left is some way of being able to account for productivity.  I mean, if I write no code, I’ll have no bugs, right?  And all things being equal, the more productive I am, the more bugs I’ll have.  So how do we measure this? Here is what we can’t do:</p>\n<ul>\n<li>Lines of code – you can’t measure based on lines of code because that has been shown to be an inaccurate measure of productivity.  More lines may just mean you are not very efficient.</li>\n<li>Hours worked – <a href=\"/rapidDevelopment\">Rapid Development</a> has statistics in it that show there is a factor of 10 difference between good programmers and bad programmers.</li>\n</ul>\n<h4 id=\"Just-a-suggestion\"><a href=\"#Just-a-suggestion\" class=\"headerlink\" title=\"Just a suggestion:\"></a>Just a suggestion:</h4><p>Since short methods are desirable, what if we measure number of test relative to number of methods relative to number of classes.  This would enforce the single responsibility principle.</p>\n<p>T &#x3D; Tests M &#x3D; Methods C &#x3D; Classes 1&#x2F;((T&#x2F;M)&#x2F;C) &#x3D; Productivity Score Therefore,</p>\n<ul>\n<li>If I worked on 3 classes each with 6 methods and each method has 2 tests, I end up with a productivity score of 1.5</li>\n<li>If I had one class with 18 methods each with 2 tests, I end up with a productivity score of .5</li>\n<li>If, on the other hand, I put everything in one method, and one class and had the same 36 tests, my productivity score would be .02</li>\n<li>If you write no code, your productivity score is 0.</li>\n</ul>\n<p>That’s just a simple way to calculate.  You may choose to use cyclomatic complexity in some way if you have that number easily available to you.</p>\n<p>Well, that’s my rough sketch of how we might be able to turn TDD into something of a game along with being able to prove to ourselves and management that it really does produce better code. How else might you embellish this or change it so it works better?  Let me know in the comments below.</p>\n<h4 id=\"Other-Test-Driven-Development-Resources\"><a href=\"#Other-Test-Driven-Development-Resources\" class=\"headerlink\" title=\"Other Test Driven Development Resources\"></a>Other Test Driven Development Resources</h4><ul>\n<li><a href=\"/testDrivenDevelopmentByExample\">Test Driven Development: by Example</a></li>\n<li><a href=\"/professionalTestDrivenDevelopmentWithCSharp\">Professional Test Driven Development w&#x2F; C#</a></li>\n</ul>\n",
            "tags": [
                "tdd",
                "agile",
                "extreme programming",
                "gamification",
                "paired programming"
            ]
        }
    ]
}