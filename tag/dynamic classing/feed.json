{
    "version": "https://jsonfeed.org/version/1",
    "title": "Dave's Notebook • All posts by \"dynamic classing\" tag",
    "description": null,
    "home_page_url": "http://davembush.github.com",
    "items": [
        {
            "id": "http://davembush.github.com/dynamically-change-class-attribute-from-asp-net/",
            "url": "http://davembush.github.com/dynamically-change-class-attribute-from-asp-net/",
            "title": "Dynamically Change class Attribute From ASP.NET",
            "date_published": "2009-09-29T09:25:00.000Z",
            "content_html": "<p><img src=\"/uploads/2009/09/B03B0015.jpg\" alt=\"B03B0015\" title=\"B03B0015\"> I recently received a question from another programmer I know who’s been using PHP prior to ASP.NET that made me think harder about a problem we’ve all had in ASP.NET.  The basic problem is this:</p>\n<span id=\"more\"></span>\n\n<p>How do you dynamically change the class of a hyperlink based on the page name so that the hyperlink that represents the current page is styled differently than all the other hyperlinks on our screen?  If you want you can substitute any other HTML element you want, but the problem remains the same.</p>\n<p>The first, most obvious answer would be to create a case statement of some sort.</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"built_in\">string</span> fileName = AppRelativeVirtualPath</span><br><span class=\"line\">    .ToLower().Replace(<span class=\"string\">&quot;~/&quot;</span>,<span class=\"string\">&quot;&quot;</span>).Replace(<span class=\"string\">&quot;/&quot;</span>,<span class=\"string\">&quot;_&quot;</span>)</span><br><span class=\"line\">    .Replace(<span class=\"string\">&quot;.aspx&quot;</span>,<span class=\"string\">&quot;&quot;</span>);</span><br><span class=\"line\"><span class=\"keyword\">switch</span>(fileName)</span><br><span class=\"line\">&#123;</span><br><span class=\"line\">     <span class=\"keyword\">case</span> <span class=\"string\">&quot;fileone&quot;</span>:</span><br><span class=\"line\">             m_hyperLinkFileOne.CssClass =</span><br><span class=\"line\">                <span class=\"string\">&quot;selectedClass&quot;</span>;</span><br><span class=\"line\">             <span class=\"keyword\">break</span>;</span><br><span class=\"line\">    <span class=\"comment\">// etc...</span></span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n\n<p>But we all know just how ugly that code will get once we start adding pages to our site.   Yuck!  Unfortunately, this is exactly the code I’ve been recommending up until today.</p>\n<p>What was I thinking?!</p>\n<p>If you are familiar with ASP.NET at all, you should already be familiar with the Page_Load event handler.  I bet that’s where you do 90% of your page initialization.  But did you know that there is a load event that fires for each control?</p>\n<p>Further, you can have all of your controls point to the same load event handler.  So if we take advantage of this, we can write very tight code that automatically sets the class based on the current page name.</p>\n<figure class=\"highlight csharp\"><table><tr><td class=\"gutter\"><pre><span class=\"line\">1</span><br><span class=\"line\">2</span><br><span class=\"line\">3</span><br><span class=\"line\">4</span><br><span class=\"line\">5</span><br><span class=\"line\">6</span><br><span class=\"line\">7</span><br><span class=\"line\">8</span><br><span class=\"line\">9</span><br><span class=\"line\">10</span><br><span class=\"line\">11</span><br><span class=\"line\">12</span><br><span class=\"line\">13</span><br><span class=\"line\">14</span><br><span class=\"line\">15</span><br><span class=\"line\">16</span><br><span class=\"line\">17</span><br><span class=\"line\">18</span><br><span class=\"line\">19</span><br><span class=\"line\">20</span><br><span class=\"line\">21</span><br><span class=\"line\">22</span><br><span class=\"line\">23</span><br><span class=\"line\">24</span><br></pre></td><td class=\"code\"><pre><span class=\"line\"><span class=\"comment\">// This code assumes that the ID of the hyperLink</span></span><br><span class=\"line\"><span class=\"comment\">//  controls follow</span></span><br><span class=\"line\"><span class=\"comment\">// the form of m_hyperLinkDestinationPageName</span></span><br><span class=\"line\"><span class=\"comment\">// ie, a link to default.aspx would become</span></span><br><span class=\"line\"><span class=\"comment\">// m_hyperLinkDefault</span></span><br><span class=\"line\"><span class=\"function\"><span class=\"keyword\">void</span> <span class=\"title\">HyperLinkLoad</span>(<span class=\"params\">Object sender, EventArgs args</span>)</span></span><br><span class=\"line\">&#123;</span><br><span class=\"line\">    <span class=\"comment\">// Only need to do this once if you have ViewState</span></span><br><span class=\"line\">    <span class=\"comment\">// enabled.</span></span><br><span class=\"line\">    <span class=\"keyword\">if</span>(!IsPostBack)</span><br><span class=\"line\">    &#123;</span><br><span class=\"line\">        <span class=\"built_in\">string</span> fileName = AppRelativeVirtualPath</span><br><span class=\"line\">            .ToLower().Replace(<span class=\"string\">&quot;~/&quot;</span>,<span class=\"string\">&quot;&quot;</span>).Replace(<span class=\"string\">&quot;/&quot;</span>,<span class=\"string\">&quot;_&quot;</span>)</span><br><span class=\"line\">            .Replace(<span class=\"string\">&quot;.aspx&quot;</span>,<span class=\"string\">&quot;&quot;</span>);</span><br><span class=\"line\">        <span class=\"comment\">// sender will always point to the control that</span></span><br><span class=\"line\">        <span class=\"comment\">// fired the event so, assuming that only</span></span><br><span class=\"line\">        <span class=\"comment\">// asp:hyperlink controls call HyperLinkLoad</span></span><br><span class=\"line\">        <span class=\"keyword\">if</span>(<span class=\"string\">&quot;m_hyperlink&quot;</span>+file ==</span><br><span class=\"line\">           ((HyperLinkControl)sender)</span><br><span class=\"line\">           .ID.ToLower())</span><br><span class=\"line\">           ((HyperLinkControl)sender).CssClass=</span><br><span class=\"line\">              <span class=\"string\">&quot;selectedClass&quot;</span>;</span><br><span class=\"line\">    &#125;</span><br><span class=\"line\">&#125;</span><br></pre></td></tr></table></figure>\n",
            "tags": [
                "asp.net",
                "html",
                "class",
                "dynamic classing"
            ]
        }
    ]
}